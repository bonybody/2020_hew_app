version: "3"
volumes:
  volume-nuxt-dev:
  volume-node-modules:
  volume-db-data:
services:
  front: # Nuxt.js(フロントエンド)の設定
    build: #Docker Imageをbuildするための設定
      context: ./infra/front/ #Dockerfileの場所
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
    ports: # ホスト:コンテナでPortを対応付ける
      - "8001:80"
    volumes: # ホストのディレクトリ:コンテナのディレクトリで指定し同期する
      - ./front:/front
      - volume-nuxt-dev:/front/.nuxt
      - volume-node-modules:/front/node_modules
    tty: true
    environment: # コンテナ内に渡される環境変数
      - http_proxy
      - https_proxy
      - ftp_proxy
      - HOST
      - PORT
      - TZ
      - API_URL_CLIENT
      - API_URL_SERVER
      - HOST_FRONT_URL
    command: >
      bash -c "npm run build && npm run start"


  api:
    build:
      context: ./infra/api/
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
    ports:
      - "8002:80"
    volumes:
      - "./api:/api"
      - "./infra/.aws:/root/.aws"
    environment: # コンテナ内に渡される環境変数
      - http_proxy
      - https_proxy
      - ftp_proxy
      - HOST
      - PORT
      - TZ
      - DB_URL
      - DB_HOST
      - POSTGRES_DATABASE
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    command: >
      bash -c "/entrypoint.sh"
  db:
    image: postgres:10.5
    ports:
      - "5432:5432"
    volumes:
      - "./db/initdb.d:/docker-entrypoint-initdb.d"
    environment:
      - http_proxy
      - https_proxy
      - ftp_proxy
      - HOST
      - TZ
      - POSTGRES_ROOT_PASSWORD
      - POSTGRES_DATABASE
      - POSTGRES_USER
      - POSTGRES_PASSWORD

    
